{/* <table className='h-lvh w-5/6 overflow-auto table-auto border-collapse  border-slate-500 cursor-pointer '>
    <thead>
      <tr className="px-6 py-3 text-start font-medium text-gray-500 uppercase dark:text-neutral-500">
        <th>Id</th>
        <th>Name</th>
        <th>Sex</th>
        <th>Location</th>
        <th>PhoneNumber</th>
      </tr>
    </thead>
    <hr></hr>
    <tbody className='cursor-pointer'>
      {listOfPatients.map((value, key) => {
        return(
          <tr onClick={() => navigate(`/patientsinfo/${value.id}`)}
            className='odd:bg-white even:bg-gray-100 dark:odd:bg-neutral-000 dark:even:bg-gray-300 h-10 rounded-lg'
          >
            <td className='p-10 '>{value.id}</td>
            <td>{value.firstName} {value.lastName}</td>
            <td>{value.sex}</td>
            <td>{value.location}</td>
            <td>{value.phoneNumber}</td>
          </tr>
        )
      })}
    </tbody>
  </table> */}

  {/* <div className="bg-slate-500 w-1/2 h-dvh ">
    <div className="h-screen flex items-center justify-center">
        <h1>
            Please register here
        </h1>
    </div>
</div> */}

<Formik
initialValues={initialValues}
onSubmit={onSubmit}
>
    <Form>
        <Field
        value={patientObject.id}
        id="inputCreateInfo" 
        name="bloodSugarLevel" 
        placeholder="mmol/L"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5 mb-5 "

        />
        <label
        className="uppercase"
        >Blood Sugar Level</label>
        <Field
        id="inputCreateInfo" 
        name="bloodSugarLevel" 
        placeholder="mmol/L"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5 mb-5"

        />
        <label
        className="uppercase"
        >Weight</label>
        <Field
        id="inputCreateInfo" 
        name="weight" 
        placeholder="kg"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5  mb-5"

        />
        <label
        className="uppercase"
        >Cholesterol Level</label>
        <Field
        id="inputCreateInfo" 
        name="cholesterol" 
        placeholder="kg"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5  mb-5"     
        />

        <label
        className="uppercase"
        >Hemoglobin Level</label>
        <Field
        id="inputCreateInfo" 
        name="hemoglobin" 
        placeholder="kg"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5  mb-5"                            
        />
        
        <label
        className="uppercase"
        >Systolic Level</label>
        <Field
        id="inputCreateInfo" 
        name="systolicBloodPressure" 
        placeholder="kg"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5  mb-5"                            
        />

        <label
        className="uppercase"
        >Diastolic Level</label>
        <Field
        id="inputCreateInfo" 
        name="diastolicBloodPressure" 
        placeholder="kg"
        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5  mb-5" 
        />

        <button type="submit"
        className="text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl hover:border-slate-400 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 float-right"
        >
            Add Level
        </button>
    </Form>
</Formik>

<Formik
                initialValues={initialValues}
                onSubmit={onSubmit}
                validationSchema={validationSchema}
            >
                <Form>
                    <div className="content-center w-2/3 items-center justify-center ">
                        <img className="h-48 w-50" src={addimage} alt="image" />
                        <h1 className="uppercase w-1/2 decoration-4 text-5xl font-bold pb-2 font-header text-slate-600">
                        Add <br></br>Patients
                        </h1>
                        <h2 className="font-header uppercase text-2xl text-gray-600 pb-5"> Personal  Information</h2>
                        <hr className="border-2"></hr>
                        <div className="grid grid-row-2 gap-4 ">
                            <div className="flex flex-col">
                                <label className="">First Name:</label>
                                <ErrorMessage name="firstName" component='span' className="text-red-900 font-bold"/>
                                <Field 
                                id="inputCreateInfo" 
                                name="firstName" 
                                placeholder="First Name"
                                className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                                />
                            </div>
                            <div className="flex flex-col">
                                <label>Last Name:</label>
                                <ErrorMessage name="lastName" component='span' className="text-red-900 uppercase"/>
                                <Field 
                                id="inputCreateInfo" 
                                name="lastName" 
                                placeholder="Last Name"
                                className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                                />
                            </div>
                            <div className="flex flex-row place-content-between">
                                <div className="flex flex-col">
                                    <div className="flex w-50 place-content-evenly items-center justify-center">
                                        <p className="pr-3">Sex:</p>
                                        <div
                                          className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                                        >
                                            <label className="pr-5">
                                            <Field 
                                            type="radio"
                                            id="inputCreateInfo" 
                                            name="sex" 
                                            value="Male"
                                            />
                                            Male
                                            </label>
                                            <label>
                                                <Field 
                                                type="radio"
                                                id="inputCreateInfo" 
                                                name="sex" 
                                                value="Female"
                                                />
                                                Female        
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div className="flex flex-col">
                                    <div className="flex w-50 place-content-evenly items-center justify-center">
                                        <p className="pr-3">Smoking:</p>
                                        <div
                                         className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                                        >
                                            <label className="pr-5">
                                                <Field 
                                                type="radio"
                                                id="inputCreateInfo" 
                                                name="smoking" 
                                                value="Yes"
                                                />
                                                Yes
                                            </label>
                                            <label>
                                                <Field 
                                                type="radio"
                                                id="inputCreateInfo" 
                                                name="smoking" 
                                                value="No"
                                                />
                                                No        
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        
                            <div className="flex flex-col">
                                <label>Location:</label>
                                <Field 
                                as="select"
                                id="inputCreateInfo" 
                                name="location" 
                                placeholder="Enter location"
                                className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5">
                                    <option value="Sale">Sale</option>
                                    <option value="Khemisset">Khemisset</option>
                                    <option value="Tangier">Tangier</option>
                                </Field>
                            </div>
                            <div className="flex flex-col">
                                <label>Phone Number:</label>
                                <Field 
                                id="inputCreateInfo" 
                                name="phoneNumber" 
                                placeholder="(XXX)-XXX-XXXX"
                                className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                                />
                                </div>
                            <div className=" pb-3">
                                <label>Birth Year:</label>
                                <Field 
                                id="inputCreateInfo" 
                                name="age" 
                                placeholder="Enter ~age"
                                className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"
                            />
                            </div>
                            <div>
                                <DataPick className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-2.5"/>
                            </div>
                        </div>
                        <hr className=" border-2 b"></hr>
                        <div className="pt-3">
                            <button type="submit" 
                            className="text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 float-right"
                            >
                                Submit Patient
                            </button>
                            <Modal
                                className="absolute inset-0  mx-auto my-auto"
                                open={open}
                                onClose={handleClose}
                            >
                                <Box
                                className="absolute inset-0  mx-auto my-auto h-30 w-1/2 bg-white"
                                >      
                                    <div className="flex flex-col h-full items-center justify-center">
                                        <h1 className="uppercase w-1/2 decoration-4 text-5xl">
                                            This Patient have been sucessfully registered!
                                        </h1>
                                        <button
                                            onClick={() => navigate(`/patientsinfo/${length}`)}
                                            className="text-white bg-gradient-to-br uppercase from-purple-600 to-blue-500 hover:bg-gradient-to-bl hover:border-slate-400 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-10 py-4 text-center me-2 mt-5 "
                        >
                                                Continue to Profile
                                        </button>
                                    </div>
                                </Box>        
                            </Modal>
                        </div>
                    </div>

                </Form>
            </Formik>

            let navigate = useNavigate(); 
            let { id } = useParams();
            const [patientObject, setPatientObject] = useState({});
            const [levels, setlevels] = useState([]);
        
        
            const initialValues = { 
                bloodSugarLevel: 0,
                weight: 0,
                cholesterol: 0,
                hemoglobin: 0,
                systolicBloodPressure: 0,
                diastolicBloodPressure: 0,
                InfoId:parseInt(id)
                
            }
        
            const onSubmit = (data) => {
                axios.post("http://localhost:3001/levels", data).then((response) => {
                    console.log(response.data)
                    console.log(initialValues)
                    console.log("it worked")
                    navigate(`/searchPatients/${id}`)
                })
            }
        
        
            useEffect(() => {
                axios.get(`http://localhost:3001/patientsinfo/byId/${id}`).then((response) => {
                    setPatientObject(response.data);
                    console.log(response.data);
            }); 
                axios.get(`http://localhost:3001/levels/${id}`).then((response) => {
                    setlevels(response.data);
                    console.log(response.data);
            }); 
        }, []);
        
            const deletePatient = (id) => {
                axios.delete(`http://localhost:3001/patientsinfo/${id}`)
                .then(() => {
                    console.log(`Deleted post with ID ${patientObject.id}`);
                    navigate(`/searchPatients/`)
                })
            }
        
            const deleteLevel = (id) => {
                axios.delete(`http://localhost:3001/levels/${id}`)
                .then(()=>{
                    console.log(`Deleted post with ID ${patientObject.id}`);
                })
            }
            return(
                <section className="flex flex-wrap w-5/6 h-5/6 pt-8">
                    <div className="flex h-full w-full">
                        <div className="flex flex-row border-2 items-center rounded-lg border-slate-600  mb-5 pr-10 bg-slate-600 text-white w-full">
                            <div className="uppercase  decoration-4 text-5xl  font-bold pl-10">
                                {patientObject.id} | {patientObject.firstName} {patientObject.lastName}
                            </div>
                            <div className=" uppercase pl-10 pb-10 pt-10 text-xl">
                                <p>
                                    Sex:{patientObject.sex}
                                </p>  
                                <p>
                                    Location: {patientObject.location}
                                </p>
                                <p>
                                    Phone #: {patientObject.phoneNumber}
                                </p>
                                {/* <button onClick={() => deletePatient(patientObject.id)}
                                    className="text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2"
                >
                                    Delete Patient
                                </button> */}
                            </div>
                        </div>
                    </div>
                    <div className="flex h-full w-full">
                        <div className="border-2 border-slate-600 rounded-lg pt-10 pb-10 w-1/6">
                            <Formik
                                initialValues={initialValues}
                                onSubmit={onSubmit}
                                >
                                    <Form className="flex flex-col place-content-evenly items-center h-full">
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full ">
                                            <label
                                            className="uppercase text-xl mb-2"
                                            >Blood Sugar Level </label>
                                            <Field
                                            id="inputCreateInfo" 
                                            name="bloodSugarLevel" 
                                            placeholder="mmol/L"
                                            className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1 ml-2"
                                            />
                                        </div>
        
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full">
                                            <label
                                            className="uppercase text-xl mb-2"
                                            >Weight</label>
                                            <Field
                                            id="inputCreateInfo" 
                                            name="weight" 
                                            placeholder="kg"
                                            className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1  ml-2"
                                            />
                                        </div>
        
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full">
                                            <label
                                            className="uppercase text-xl mb-2"
                                            >Cholesterol Level</label>
                                            <Field
                                            id="inputCreateInfo" 
                                            name="cholesterol" 
                                            placeholder="kg"
                                            className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1 ml-2"     
                                            />
                                        </div>
        
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full">
                                            <label
                                            className="uppercase text-xl mb-2"
                                            >Hemoglobin Level</label>
                                            <Field
                                            id="inputCreateInfo" 
                                            name="hemoglobin" 
                                            placeholder="kg"
                                            className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1 ml-2"                            
                                            />
                                        </div>
        
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full">
                                        <label
                                        className="uppercase text-xl mb-2"
                                        >Systolic Level</label>
                                        <Field
                                        id="inputCreateInfo" 
                                        name="systolicBloodPressure" 
                                        placeholder="kg"
                                        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1  ml-2"                            
                                        />
                                        </div>
        
                                        <div className="flex flex-col place-content-evenly items-center justify-center mb-5 w-full">
                                        <label
                                        className="uppercase text-xl mb-2"
                                        >Diastolic Level</label>
                                        <Field
                                        id="inputCreateInfo" 
                                        name="diastolicBloodPressure" 
                                        placeholder="kg"
                                        className="border-2 border-gray-300 text-gray-900 text-sm rounded-lg block p-1  ml-2" 
                                        />
                                        </div>
                                        <button type="submit"
                                        className="text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl hover:border-slate-400 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-5 float-left"
                                        >
                                            Add Level
                                        </button>
                                    </Form>
                            </Formik>
                        </div>
                        <div className="flex flex-row flex-wrap border-2 border-slate-600 rounded-lg p-5 ml-10 w-5/6" >
                                <h1 className="uppercase decoration-4 text-4xl bg-slate-600 p-5 rounded-lg h-1/2 font-bold pb-2 font-header text-white"> Results </h1> <br></br>
                                {levels.map((level, key) => {
                                    return(
                                    <div className="pl-10 pb-10 ">
                                        <div className="flex-col h-1/2">
                                            <p className="text-xl" key={key}>{level.id}</p>
                                            {/* <p>{level.createdAt}</p> */}
                                            <div className="text-xl">    
                                                <p>
                                                    {level.bloodSugarLevel} | Blood Sugar Level
                                                </p>
                                                <p>
                                                    {level.weight} | Weight
                                                </p>
                                                <p>
                                                    {level.cholesterol} | Cholesterol Level
                                                </p>
                                                <p>
                                                    {level.hemoglobin} | Hemoglobin Level
                                                </p>
                                                <p>
                                                    {level.systolicBloodPressure} / {level.diastolicBloodPressure} | Blood Pressure
                                                </p>
                                                <button 
                                                className="hover:text-red-600"
                                                onClick={() => deleteLevel(level.id)}>
                                                    x
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    )
                                })}
                            </div>
                    </div>
                </section>
            )
        }
        