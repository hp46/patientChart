{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyung\\\\OneDrive\\\\Desktop\\\\App\\\\patient-chart\\\\client\\\\src\\\\pages\\\\PatientsDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsDetail() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [patientObject, setPatientObject] = useState({});\n  const [levels, setlevels] = useState([]);\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(false);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/patientsinfo/byId/${id}`).then(response => {\n      setPatientObject(response.data);\n      console.log(response.data);\n    });\n    axios.get(`http://localhost:3001/levels/${id}`).then(response => {\n      setlevels(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-bold uppercase p-10\",\n      children: [patientObject.firstName, \" , \", patientObject.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row flex-wrap\",\n      children: levels.map((level, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: patientObject.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.bloodSugarLevel, \" | Blood Sugar Level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.weight, \" | Weight\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.cholesterol, \" | Cholesterol Level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.hemoglobin, \" | Hemoglobin Level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.systolicBloodPressure, \" | Systolic Level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [level.diastolicBloodPressure, \" | Diastolic Level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpen,\n        className: \"text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 float-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientsDetail, \"AQrSiE9+Q9W9CKk9pfqmQa2TOp0=\", false, function () {\n  return [useParams];\n});\n_c = PatientsDetail;\nexport default PatientsDetail;\nvar _c;\n$RefreshReg$(_c, \"PatientsDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Formik","Form","Field","ErrorMessage","Yup","useNavigate","Modal","Box","jsxDEV","_jsxDEV","PatientsDetail","_s","id","patientObject","setPatientObject","levels","setlevels","open","setOpen","handleClose","handleOpen","get","then","response","data","console","log","children","className","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","map","level","key","createdAt","bloodSugarLevel","weight","cholesterol","hemoglobin","systolicBloodPressure","diastolicBloodPressure","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hyung/OneDrive/Desktop/App/patient-chart/client/src/pages/PatientsDetail.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from 'yup'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from '@mui/material/Modal'\r\nimport Box from '@mui/material/Box'\r\n\r\n\r\nfunction PatientsDetail () {\r\n    let { id } = useParams();\r\n    const [patientObject, setPatientObject] = useState({});\r\n    const [levels, setlevels] = useState([]);\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const handleClose = () => setOpen(false)\r\n    const handleOpen = () => setOpen(false)\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/patientsinfo/byId/${id}`).then((response) => {\r\n            setPatientObject(response.data);\r\n            console.log(response.data);\r\n    }); \r\n        axios.get(`http://localhost:3001/levels/${id}`).then((response) => {\r\n            setlevels(response.data);\r\n            console.log(response.data);\r\n    }); \r\n}, []);\r\n\r\n \r\n\r\n    return(\r\n        <section>\r\n            <div className=\"font-bold uppercase p-10\">\r\n                {patientObject.firstName} , {patientObject.lastName}\r\n            </div>\r\n            <div className=\"flex flex-row flex-wrap\" >\r\n                {levels.map((level, key) => {\r\n                    return(\r\n                    <div className=\"p-10\">\r\n                        <div className=\"flex-col\">\r\n                            <p>{patientObject.createdAt}</p>\r\n                            <p>\r\n                                {level.bloodSugarLevel} | Blood Sugar Level\r\n                            </p>\r\n                            <p>\r\n                                {level.weight} | Weight\r\n                            </p>\r\n                            <p>\r\n                                {level.cholesterol} | Cholesterol Level\r\n                            </p>\r\n                            <p>\r\n                                {level.hemoglobin} | Hemoglobin Level\r\n                            </p>\r\n                            <p>\r\n                                {level.systolicBloodPressure} | Systolic Level\r\n                            </p>\r\n                            <p>\r\n                                {level.diastolicBloodPressure} | Diastolic Level\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div>\r\n                <button\r\n                onClick={handleOpen}\r\n                className=\"text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 float-left\"\r\n                >\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PatientsDetail"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}