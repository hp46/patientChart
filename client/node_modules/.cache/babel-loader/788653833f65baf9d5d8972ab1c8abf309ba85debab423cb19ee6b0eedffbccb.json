{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyung\\\\OneDrive\\\\Desktop\\\\App\\\\patient-chart\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport AddPatients from './pages/AddPatients';\nimport SearchPatients from './pages/SearchPatients';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [listOfPatients, setListofPatients] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/patientsinfo\").then(response => {\n      setListofPatients(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/addPatients\",\n          element: /*#__PURE__*/_jsxDEV(AddPatients, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 49\n          }, this),\n          name: \"addPatients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/searchPatients\",\n          element: /*#__PURE__*/_jsxDEV(SearchPatients, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 52\n          }, this),\n          name: \"searchPatients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: listOfPatients.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", value.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jAs8gxSpiEWTABEFqAkjU0NLbVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar","BrowserRouter","Routes","Route","AddPatients","SearchPatients","axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","listOfPatients","setListofPatients","get","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","name","map","value","key","firstName","_c","$RefreshReg$"],"sources":["C:/Users/hyung/OneDrive/Desktop/App/patient-chart/client/src/App.js"],"sourcesContent":["import './App.css';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport  AddPatients  from './pages/AddPatients';\nimport  SearchPatients  from './pages/SearchPatients';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\n\nfunction App() {\n\n  const [listOfPatients, setListofPatients] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/patientsinfo\").then((response) => {\n      setListofPatients(response.data);\n    })\n  }, []);\n\n  return (\n    <div>\n      <BrowserRouter>\n        <NavBar/>\n          <Routes>\n            <Route path='/addPatients' element={<AddPatients />} name='addPatients' />\n            <Route path='/searchPatients' element={<SearchPatients />} name='searchPatients'/>\n          </Routes>\n        <div>\n          {listOfPatients.map((value, key) => {\n            return(\n              <div> {value.firstName}\n              </div>\n            )\n          })}\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAQC,WAAW,MAAO,qBAAqB;AAC/C,OAAQC,cAAc,MAAO,wBAAwB;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdD,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACjEH,iBAAiB,CAACG,QAAQ,CAACC,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA,CAACT,aAAa;MAAAkB,QAAA,gBACZT,OAAA,CAACV,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACPb,OAAA,CAACR,MAAM;QAAAiB,QAAA,gBACLT,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,cAAc;UAACC,OAAO,eAAEf,OAAA,CAACN,WAAW;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACG,IAAI,EAAC;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Eb,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,iBAAiB;UAACC,OAAO,eAAEf,OAAA,CAACL,cAAc;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACG,IAAI,EAAC;QAAgB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACXb,OAAA;QAAAS,QAAA,EACGN,cAAc,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;UAClC,oBACEnB,OAAA;YAAAS,QAAA,GAAK,GAAC,EAACS,KAAK,CAACE,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACX,EAAA,CA7BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}