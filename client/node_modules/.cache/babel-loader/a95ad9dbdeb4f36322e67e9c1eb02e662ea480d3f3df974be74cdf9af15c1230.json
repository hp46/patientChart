{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyung\\\\OneDrive\\\\Desktop\\\\App\\\\patient-chart\\\\client\\\\src\\\\pages\\\\AddPatients.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport DatePicker from \"react-datepicker\";\nimport addimage from \"../images/computer-02.png\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DataPick from \"../components/DatePicker\";\nimport FormikContainer from \"../components/FormikContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPatients() {\n  _s();\n  let navigate = useNavigate();\n  const [length, setLenght] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleClose = () => setOpen(false);\n  const handleDateChange = date => {\n    selectedDate(date);\n  };\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    sex: \"\",\n    location: \"Sale\",\n    phoneNumber: \"\",\n    age: \"\",\n    smoking: \"\",\n    date: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First Name requried*\"),\n    lastName: Yup.string().required(\"Last Name requried*\"),\n    sex: Yup.string().required(\"Select Male or Female\"),\n    location: Yup.string().required(\"Must be answered\"),\n    phoneNumber: Yup.string().required(),\n    age: Yup.string().required(\"Must be answered\"),\n    smoking: Yup.string().required(\"Must be answered\"),\n    data: Yup.string().required()\n  });\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/patientsinfo\", data).then(response => {\n      console.log(\"it worked\");\n      axios.get(\"http://localhost:3001/patientsinfo\").then(response => {\n        setLenght(response.data.length);\n        // console.log(response.data.length)\n      });\n      console.log(\"it worked\");\n      setOpen(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-full max-h-full h-screen flex-row content-center \",\n    children: /*#__PURE__*/_jsxDEV(FormikContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPatients, \"aIFzFNsWjEiRsRVBh0dKO8NESkY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPatients;\nvar _c;\n$RefreshReg$(_c, \"AddPatients\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","useEffect","useState","Modal","Box","DatePicker","addimage","DataPick","FormikContainer","jsxDEV","_jsxDEV","AddPatients","_s","navigate","length","setLenght","open","setOpen","selectedDate","setSelectedDate","handleClose","handleDateChange","date","initialValues","firstName","lastName","sex","location","phoneNumber","age","smoking","validationSchema","object","shape","string","required","data","onSubmit","post","then","response","console","log","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hyung/OneDrive/Desktop/App/patient-chart/client/src/pages/AddPatients.js"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport Modal from '@mui/material/Modal'\r\nimport Box from '@mui/material/Box'\r\nimport DatePicker from \"react-datepicker\";\r\nimport addimage from \"../images/computer-02.png\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DataPick from \"../components/DatePicker\";\r\nimport FormikContainer from \"../components/FormikContainer\";\r\n\r\nexport default function AddPatients() {\r\n    let navigate = useNavigate(); \r\n    const [length, setLenght] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState(null)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    const handleDateChange =(date) => {\r\n        selectedDate(date)\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        sex: \"\",\r\n        location: \"Sale\",\r\n        phoneNumber: \"\",\r\n        age: \"\",\r\n        smoking: \"\",\r\n        date: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        firstName: Yup.string().required(\"First Name requried*\"),\r\n        lastName:Yup.string().required(\"Last Name requried*\"),\r\n        sex: Yup.string().required(\"Select Male or Female\"),\r\n        location: Yup.string().required(\"Must be answered\"),\r\n        phoneNumber: Yup.string().required(),\r\n        age: Yup.string().required(\"Must be answered\"),\r\n        smoking: Yup.string().required(\"Must be answered\"),\r\n        data: Yup.string().required(),\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/patientsinfo\", data).then((response) => {\r\n            console.log(\"it worked\")\r\n            axios.get(\"http://localhost:3001/patientsinfo\").then((response) => {\r\n                setLenght(response.data.length);\r\n                // console.log(response.data.length)\r\n              })\r\n            console.log(\"it worked\")\r\n            setOpen(true);\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div\r\n        className=\"max-w-full max-h-full h-screen flex-row content-center \"\r\n        >\r\n            <FormikContainer></FormikContainer>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}